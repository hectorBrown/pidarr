/*
 * Tdarr API
 *
 * Tdarr API Docs
 *
 * The version of the OpenAPI document: 2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiV2PollWorkerLimitsPost200ResponseWorkerLimits {
    #[serde(rename = "healthcheckcpu", skip_serializing_if = "Option::is_none")]
    pub healthcheckcpu: Option<f64>,
    #[serde(rename = "healthcheckgpu", skip_serializing_if = "Option::is_none")]
    pub healthcheckgpu: Option<f64>,
    #[serde(rename = "transcodecpu", skip_serializing_if = "Option::is_none")]
    pub transcodecpu: Option<f64>,
    #[serde(rename = "transcodegpu", skip_serializing_if = "Option::is_none")]
    pub transcodegpu: Option<f64>,
}

impl ApiV2PollWorkerLimitsPost200ResponseWorkerLimits {
    pub fn new() -> ApiV2PollWorkerLimitsPost200ResponseWorkerLimits {
        ApiV2PollWorkerLimitsPost200ResponseWorkerLimits {
            healthcheckcpu: None,
            healthcheckgpu: None,
            transcodecpu: None,
            transcodegpu: None,
        }
    }
}

