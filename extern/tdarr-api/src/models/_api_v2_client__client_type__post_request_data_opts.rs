/*
 * Tdarr API
 *
 * Tdarr API Docs
 *
 * The version of the OpenAPI document: 2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiV2ClientClientTypePostRequestDataOpts {
    #[serde(rename = "table", skip_serializing_if = "Option::is_none")]
    pub table: Option<String>,
    #[serde(rename = "property", skip_serializing_if = "Option::is_none")]
    pub property: Option<String>,
    #[serde(rename = "fileMedium", skip_serializing_if = "Option::is_none")]
    pub file_medium: Option<String>,
    #[serde(rename = "detail", skip_serializing_if = "Option::is_none")]
    pub detail: Option<String>,
    #[serde(rename = "dbID", skip_serializing_if = "Option::is_none")]
    pub db_id: Option<String>,
    #[serde(rename = "setAll", skip_serializing_if = "Option::is_none")]
    pub set_all: Option<bool>,
    #[serde(rename = "updatedObj", skip_serializing_if = "Option::is_none")]
    pub updated_obj: Option<serde_json::Value>,
    #[serde(rename = "csv", skip_serializing_if = "Option::is_none")]
    pub csv: Option<bool>,
    #[serde(rename = "applyToAllStaged", skip_serializing_if = "Option::is_none")]
    pub apply_to_all_staged: Option<bool>,
    #[serde(rename = "verdict", skip_serializing_if = "Option::is_none")]
    pub verdict: Option<String>,
}

impl ApiV2ClientClientTypePostRequestDataOpts {
    pub fn new() -> ApiV2ClientClientTypePostRequestDataOpts {
        ApiV2ClientClientTypePostRequestDataOpts {
            table: None,
            property: None,
            file_medium: None,
            detail: None,
            db_id: None,
            set_all: None,
            updated_obj: None,
            csv: None,
            apply_to_all_staged: None,
            verdict: None,
        }
    }
}

