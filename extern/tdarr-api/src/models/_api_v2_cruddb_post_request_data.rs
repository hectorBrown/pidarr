/*
 * Tdarr API
 *
 * Tdarr API Docs
 *
 * The version of the OpenAPI document: 2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiV2CruddbPostRequestData {
    #[serde(rename = "collection")]
    pub collection: Collection,
    #[serde(rename = "mode")]
    pub mode: Mode,
    #[serde(rename = "docID", skip_serializing_if = "Option::is_none")]
    pub doc_id: Option<String>,
    #[serde(rename = "obj", skip_serializing_if = "Option::is_none")]
    pub obj: Option<serde_json::Value>,
}

impl ApiV2CruddbPostRequestData {
    pub fn new(collection: Collection, mode: Mode) -> ApiV2CruddbPostRequestData {
        ApiV2CruddbPostRequestData {
            collection,
            mode,
            doc_id: None,
            obj: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Collection {
    #[serde(rename = "SettingsGlobalJSONDB")]
    SettingsGlobalJsondb,
    #[serde(rename = "LibrarySettingsJSONDB")]
    LibrarySettingsJsondb,
    #[serde(rename = "NodeJSONDB")]
    NodeJsondb,
    #[serde(rename = "StatisticsJSONDB")]
    StatisticsJsondb,
    #[serde(rename = "VariablesJSONDB")]
    VariablesJsondb,
    #[serde(rename = "UsersJSONDB")]
    UsersJsondb,
    #[serde(rename = "ApiKeysJSONDB")]
    ApiKeysJsondb,
    #[serde(rename = "FlowsJSONDB")]
    FlowsJsondb,
    #[serde(rename = "StagedJSONDB")]
    StagedJsondb,
    #[serde(rename = "FileJSONDB")]
    FileJsondb,
    #[serde(rename = "F2FOutputJSONDB")]
    F2FOutputJsondb,
    #[serde(rename = "WorkerVerdictHistoryJSONDB")]
    WorkerVerdictHistoryJsondb,
    #[serde(rename = "JobsJSONDB")]
    JobsJsondb,
}

impl Default for Collection {
    fn default() -> Collection {
        Self::SettingsGlobalJsondb
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Mode {
    #[serde(rename = "getById")]
    GetById,
    #[serde(rename = "getByIndex")]
    GetByIndex,
    #[serde(rename = "getAll")]
    GetAll,
    #[serde(rename = "insert")]
    Insert,
    #[serde(rename = "update")]
    Update,
    #[serde(rename = "incdec")]
    Incdec,
    #[serde(rename = "removeOne")]
    RemoveOne,
    #[serde(rename = "removeByDB")]
    RemoveByDb,
    #[serde(rename = "removeAll")]
    RemoveAll,
}

impl Default for Mode {
    fn default() -> Mode {
        Self::GetById
    }
}

