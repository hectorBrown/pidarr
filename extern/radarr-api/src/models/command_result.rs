/*
 * Radarr
 *
 * Radarr API docs
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CommandResult {
    #[serde(rename = "unknown")]
    Unknown,
    #[serde(rename = "successful")]
    Successful,
    #[serde(rename = "unsuccessful")]
    Unsuccessful,

}

impl std::fmt::Display for CommandResult {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Unknown => write!(f, "unknown"),
            Self::Successful => write!(f, "successful"),
            Self::Unsuccessful => write!(f, "unsuccessful"),
        }
    }
}

impl Default for CommandResult {
    fn default() -> CommandResult {
        Self::Unknown
    }
}

