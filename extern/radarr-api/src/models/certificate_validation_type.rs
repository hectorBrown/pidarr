/*
 * Radarr
 *
 * Radarr API docs
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CertificateValidationType {
    #[serde(rename = "enabled")]
    Enabled,
    #[serde(rename = "disabledForLocalAddresses")]
    DisabledForLocalAddresses,
    #[serde(rename = "disabled")]
    Disabled,

}

impl std::fmt::Display for CertificateValidationType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Enabled => write!(f, "enabled"),
            Self::DisabledForLocalAddresses => write!(f, "disabledForLocalAddresses"),
            Self::Disabled => write!(f, "disabled"),
        }
    }
}

impl Default for CertificateValidationType {
    fn default() -> CertificateValidationType {
        Self::Enabled
    }
}

